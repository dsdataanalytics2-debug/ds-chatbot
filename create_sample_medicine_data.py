#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ЁЯТК Sample Medicine Data Generator
ржорзЗржбрж┐ржХрзЗрж▓ ржЪрзНржпрж╛ржЯржмржЯ ржПрж░ ржЬржирзНржп sample ржУрж╖рзБржзрзЗрж░ рждржерзНржп Excel ржлрж╛ржЗрж▓рзЗ рждрзИрж░рж┐ ржХрж░рзЗ
"""

import pandas as pd

def create_sample_medicine_data():
    """Sample ржорзЗржбрж┐ржХрзЗрж▓ ржбрзЗржЯрж╛ рждрзИрж░рж┐ ржХрж░рзЗ Excel ржлрж╛ржЗрж▓рзЗ рж╕рзЗржн ржХрж░рзЗ"""
    
    # Sample medicine data
    data = {
        'Medicine Name': [
            'Paracetamol', 'Ibuprofen', 'Omeprazole', 'Metformin', 'Amlodipine',
            'Atorvastatin', 'Omeprazole', 'Cetirizine', 'Ranitidine', 'Diclofenac',
            'Aspirin', 'Loratadine', 'Pantoprazole', 'Simvastatin', 'Losartan',
            'Glimepiride', 'Gliclazide', 'Insulin', 'Warfarin', 'Furosemide'
        ],
        'Bengali Name': [
            'ржкрзНржпрж╛рж░рж╛рж╕рж┐ржЯрж╛ржорж▓', 'ржЖржЗржмрзБржкрзНрж░рзЛржлрзЗржи', 'ржУржорзЗржкрзНрж░рж╛ржЬрзЛрж▓', 'ржорзЗржЯржлрж░ржорж┐ржи', 'ржЕрзНржпрж╛ржорж▓рзЛржбрж┐ржкрж╛ржЗржи',
            'ржЕрзНржпрж╛ржЯрж░ржнрж╛рж╕рзНржЯрзНржпрж╛ржЯрж┐ржи', 'ржУржорзЗржкрзНрж░рж╛ржЬрзЛрж▓', 'рж╕рж┐ржЯрж┐рж░рж┐ржЬрж┐ржи', 'рж░рж╛ржирж┐ржЯрж┐ржбрж┐ржи', 'ржбрж┐ржХрзНрж▓рзЛржлрзЗржирж╛ржХ',
            'ржЕрзНржпрж╛рж╕ржкрж┐рж░рж┐ржи', 'рж▓рзЛрж░рж╛ржЯрж╛ржбрж┐ржи', 'ржкрзНржпрж╛ржирзНржЯрзЛржкрзНрж░рж╛ржЬрзЛрж▓', 'рж╕рж┐ржоржнрж╛рж╕рзНржЯрзНржпрж╛ржЯрж┐ржи', 'рж▓рзЛрж╕рж╛рж░рзНржЯрж╛ржи',
            'ржЧрзНрж▓рж┐ржорзЗржкрж┐рж░рж╛ржЗржб', 'ржЧрзНрж▓рж┐ржХрзНрж▓рж╛ржЬрж╛ржЗржб', 'ржЗржирж╕рзБрж▓рж┐ржи', 'ржУржпрж╝рж╛рж░ржлрж╛рж░рж┐ржи', 'ржлрзБрж░рзЛрж╕рзЗржорж╛ржЗржб'
        ],
        'Category': [
            'Pain Relief', 'Pain Relief', 'Gastric', 'Diabetes', 'Blood Pressure',
            'Cholesterol', 'Gastric', 'Allergy', 'Gastric', 'Pain Relief',
            'Pain Relief', 'Allergy', 'Gastric', 'Cholesterol', 'Blood Pressure',
            'Diabetes', 'Diabetes', 'Diabetes', 'Blood Thinner', 'Diuretic'
        ],
        'Uses': [
            'ржЬрзНржмрж░ ржУ ржмрзНржпржерж╛ ржХржорж╛ржпрж╝', 'ржмрзНржпржерж╛ ржУ ржкрзНрж░ржжрж╛рж╣ ржХржорж╛ржпрж╝', 'ржЧрзНржпрж╛рж╕рзНржЯрзНрж░рж┐ржХ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи', 'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'ржЙржЪрзНржЪ рж░ржХрзНрждржЪрж╛ржк ржирж┐ржпрж╝ржирзНрждрзНрж░ржг',
            'ржХрзЛрж▓рзЗрж╕рзНржЯрзЗрж░рж▓ ржХржорж╛ржпрж╝', 'ржЧрзНржпрж╛рж╕рзНржЯрзНрж░рж┐ржХ ржЖрж▓рж╕рж╛рж░ ржЪрж┐ржХрж┐рзОрж╕рж╛', 'ржЕрзНржпрж╛рж▓рж╛рж░рзНржЬрж┐ ржкрзНрж░рждрж┐рж░рзЛржз', 'ржЧрзНржпрж╛рж╕рзНржЯрзНрж░рж┐ржХ ржЕрзНржпрж╛рж╕рж┐ржб ржХржорж╛ржпрж╝', 'ржмрзНржпржерж╛ ржУ ржкрзНрж░ржжрж╛рж╣ ржХржорж╛ржпрж╝',
            'ржмрзНржпржерж╛ ржХржорж╛ржпрж╝ ржУ рж░ржХрзНржд ржкрж╛рждрж▓рж╛ ржХрж░рзЗ', 'ржЕрзНржпрж╛рж▓рж╛рж░рзНржЬрж┐ ржкрзНрж░рждрж┐рж░рзЛржз', 'ржЧрзНржпрж╛рж╕рзНржЯрзНрж░рж┐ржХ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи', 'ржХрзЛрж▓рзЗрж╕рзНржЯрзЗрж░рж▓ ржХржорж╛ржпрж╝', 'ржЙржЪрзНржЪ рж░ржХрзНрждржЪрж╛ржк ржирж┐ржпрж╝ржирзНрждрзНрж░ржг',
            'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'рж░ржХрзНржд ржЬржорж╛ржЯ ржмрж╛ржБржзрж╛ ржкрзНрж░рждрж┐рж░рзЛржз', 'ржорзВрждрзНрж░ржмрж░рзНржзржХ'
        ],
        'Side Effects': [
            'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржорж╛ржерж╛ ржмрзНржпржерж╛', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', 'ржмржорж┐ ржмржорж┐ ржнрж╛ржм, ржбрж╛ржпрж╝рж░рж┐ржпрж╝рж╛', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржлрзБрж▓рзЗ ржпрж╛ржУржпрж╝рж╛',
            'ржорж╛ржВрж╕ржкрзЗрж╢рж┐рждрзЗ ржмрзНржпржерж╛, ржкрзЗржЯрзЗ ржмрзНржпржерж╛', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', 'ржШрзБржо ржШрзБржо ржнрж╛ржм, рж╢рзБрж╖рзНржХ ржорзБржЦ', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм',
            'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, рж░ржХрзНрждржХрзНрж╖рж░ржг', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, рж╢рзБрж╖рзНржХ ржорзБржЦ', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', 'ржорж╛ржВрж╕ржкрзЗрж╢рж┐рждрзЗ ржмрзНржпржерж╛, ржкрзЗржЯрзЗ ржмрзНржпржерж╛', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржлрзБрж▓рзЗ ржпрж╛ржУржпрж╝рж╛',
            'рж░ржХрзНрждрзЗ рж╢рж░рзНржХрж░рж╛ ржХржорзЗ ржпрж╛ржУржпрж╝рж╛, ржорж╛ржерж╛ ржШрзЛрж░рж╛', 'рж░ржХрзНрждрзЗ рж╢рж░рзНржХрж░рж╛ ржХржорзЗ ржпрж╛ржУржпрж╝рж╛, ржорж╛ржерж╛ ржШрзЛрж░рж╛', 'рж░ржХрзНрждрзЗ рж╢рж░рзНржХрж░рж╛ ржХржорзЗ ржпрж╛ржУржпрж╝рж╛, ржУржЬржи ржмрж╛ржбрж╝рж╛', 'рж░ржХрзНрждржХрзНрж╖рж░ржг, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', 'ржорзВрждрзНрж░рждрзНржпрж╛ржЧ ржмрзЗржбрж╝рзЗ ржпрж╛ржУржпрж╝рж╛, рж░ржХрзНрждржЪрж╛ржк ржХржорзЗ ржпрж╛ржУржпрж╝рж╛'
        ],
        'Dosage': [
            '500-1000mg 4-6 ржШржгрзНржЯрж╛ ржкрж░', '200-400mg 4-6 ржШржгрзНржЯрж╛ ржкрж░', '20mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '500mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '5-10mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░',
            '10-20mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '20mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '10mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '150mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '50mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░',
            '75-150mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '10mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '40mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '20-40mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '50mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░',
            '1-2mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '80mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', 'ржЗржиржЬрзЗржХрж╢ржи', '5mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '40mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░'
        ],
        'Price (BDT)': [
            '2.50', '5.00', '8.00', '3.50', '6.00',
            '12.00', '8.00', '4.00', '3.00', '7.00',
            '1.50', '4.00', '10.00', '15.00', '8.00',
            '5.00', '4.50', '150.00', '2.00', '3.50'
        ],
        'Availability': [
            'Available', 'Available', 'Available', 'Available', 'Available',
            'Available', 'Available', 'Available', 'Available', 'Available',
            'Available', 'Available', 'Available', 'Available', 'Available',
            'Available', 'Available', 'Available', 'Available', 'Available'
        ]
    }
    
    # Create DataFrame
    df = pd.DataFrame(data)
    
    # Save to Excel
    df.to_excel('medicine_data.xlsx', index=False)
    print("тЬЕ Sample medicine data Excel file created: medicine_data.xlsx")
    print(f"ЁЯТК Total medicines: {len(df)}")
    
    # Display sample
    print("\nЁЯУЛ Sample data:")
    print(df.head())
    
    # Display categories
    print(f"\nЁЯПе Medicine categories: {df['Category'].nunique()}")
    print("Categories:", ', '.join(df['Category'].unique()))
    
    return df

if __name__ == "__main__":
    create_sample_medicine_data()
