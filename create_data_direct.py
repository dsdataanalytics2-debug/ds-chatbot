#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ЁЯТК Sample Data Generator - No External Dependencies
ржорзЗржбрж┐ржХрзЗрж▓ ржЪрзНржпрж╛ржЯржмржЯ ржПрж░ ржЬржирзНржп sample ржбрзЗржЯрж╛ CSV ржлрж╛ржЗрж▓рзЗ рждрзИрж░рж┐ ржХрж░рзЗ
"""

import csv
import random

def create_sample_medicine_data():
    """Sample ржорзЗржбрж┐ржХрзЗрж▓ ржбрзЗржЯрж╛ рждрзИрж░рж┐ ржХрж░рзЗ CSV ржлрж╛ржЗрж▓рзЗ рж╕рзЗржн ржХрж░рзЗ"""
    
    # Sample medicine data
    data = [
        ['Medicine Name', 'Bengali Name', 'Category', 'Uses', 'Side Effects', 'Dosage', 'Price (BDT)', 'Availability'],
        ['Paracetamol', 'ржкрзНржпрж╛рж░рж╛рж╕рж┐ржЯрж╛ржорж▓', 'Pain Relief', 'ржЬрзНржмрж░ ржУ ржмрзНржпржерж╛ ржХржорж╛ржпрж╝', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '500-1000mg 4-6 ржШржгрзНржЯрж╛ ржкрж░', '2.50', 'Available'],
        ['Ibuprofen', 'ржЖржЗржмрзБржкрзНрж░рзЛржлрзЗржи', 'Pain Relief', 'ржмрзНржпржерж╛ ржУ ржкрзНрж░ржжрж╛рж╣ ржХржорж╛ржпрж╝', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржорж╛ржерж╛ ржмрзНржпржерж╛', '200-400mg 4-6 ржШржгрзНржЯрж╛ ржкрж░', '5.00', 'Available'],
        ['Omeprazole', 'ржУржорзЗржкрзНрж░рж╛ржЬрзЛрж▓', 'Gastric', 'ржЧрзНржпрж╛рж╕рзНржЯрзНрж░рж┐ржХ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '20mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '8.00', 'Available'],
        ['Metformin', 'ржорзЗржЯржлрж░ржорж┐ржи', 'Diabetes', 'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'ржмржорж┐ ржмржорж┐ ржнрж╛ржм, ржбрж╛ржпрж╝рж░рж┐ржпрж╝рж╛', '500mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '3.50', 'Available'],
        ['Amlodipine', 'ржЕрзНржпрж╛ржорж▓рзЛржбрж┐ржкрж╛ржЗржи', 'Blood Pressure', 'ржЙржЪрзНржЪ рж░ржХрзНрждржЪрж╛ржк ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржлрзБрж▓рзЗ ржпрж╛ржУржпрж╝рж╛', '5-10mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '6.00', 'Available'],
        ['Atorvastatin', 'ржЕрзНржпрж╛ржЯрж░ржнрж╛рж╕рзНржЯрзНржпрж╛ржЯрж┐ржи', 'Cholesterol', 'ржХрзЛрж▓рзЗрж╕рзНржЯрзЗрж░рж▓ ржХржорж╛ржпрж╝', 'ржорж╛ржВрж╕ржкрзЗрж╢рж┐рждрзЗ ржмрзНржпржерж╛, ржкрзЗржЯрзЗ ржмрзНржпржерж╛', '10-20mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '12.00', 'Available'],
        ['Cetirizine', 'рж╕рж┐ржЯрж┐рж░рж┐ржЬрж┐ржи', 'Allergy', 'ржЕрзНржпрж╛рж▓рж╛рж░рзНржЬрж┐ ржкрзНрж░рждрж┐рж░рзЛржз', 'ржШрзБржо ржШрзБржо ржнрж╛ржм, рж╢рзБрж╖рзНржХ ржорзБржЦ', '10mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '4.00', 'Available'],
        ['Ranitidine', 'рж░рж╛ржирж┐ржЯрж┐ржбрж┐ржи', 'Gastric', 'ржЧрзНржпрж╛рж╕рзНржЯрзНрж░рж┐ржХ ржЕрзНржпрж╛рж╕рж┐ржб ржХржорж╛ржпрж╝', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '150mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '3.00', 'Available'],
        ['Diclofenac', 'ржбрж┐ржХрзНрж▓рзЛржлрзЗржирж╛ржХ', 'Pain Relief', 'ржмрзНржпржерж╛ ржУ ржкрзНрж░ржжрж╛рж╣ ржХржорж╛ржпрж╝', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '50mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '7.00', 'Available'],
        ['Aspirin', 'ржЕрзНржпрж╛рж╕ржкрж┐рж░рж┐ржи', 'Pain Relief', 'ржмрзНржпржерж╛ ржХржорж╛ржпрж╝ ржУ рж░ржХрзНржд ржкрж╛рждрж▓рж╛ ржХрж░рзЗ', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, рж░ржХрзНрждржХрзНрж╖рж░ржг', '75-150mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '1.50', 'Available']
    ]
    
    # Save to CSV
    with open('medicine_data.csv', 'w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerows(data)
    
    print("тЬЕ Sample medicine data CSV file created: medicine_data.csv")
    print(f"ЁЯТК Total medicines: {len(data)-1}")
    
    # Display sample
    print("\nЁЯУЛ Sample data:")
    for row in data[:5]:
        print(row)
    
    return data

def create_sample_phone_numbers():
    """Sample ржлрзЛржи ржиржорзНржмрж░ рждрзИрж░рж┐ ржХрж░рзЗ CSV ржлрж╛ржЗрж▓рзЗ рж╕рзЗржн ржХрж░рзЗ"""
    
    # Sample names
    names = [
        "ржЖрж╣ржорзЗржж ржЖрж▓рзА", "ржлрж╛рждрзЗржорж╛ ржмрзЗржЧржо", "ржорзЛрж╣рж╛ржорзНржоржж рж░рж╣ржорж╛ржи", "ржЖржпрж╝рзЗрж╢рж╛ ржЦрж╛рждрзБржи",
        "ржЖржмрзНржжрзБрж▓ ржХрж░рж┐ржо", "рж░рж╛рж╣рзЗрж▓рж╛ рж╕рзБрж▓рждрж╛ржирж╛", "рж╣рж╛рж╕рж╛ржи ржорж╛рж╣ржорзБржж", "ржирж╛ржЬржорж╛ ржЖржХрзНрждрж╛рж░",
        "ржЗржмрзНрж░рж╛рж╣рж┐ржо рж╣рзЛрж╕рзЗржи", "рж╕рж╛ржмрж░рж┐ржирж╛ ржЗржпрж╝рж╛рж╕ржорж┐ржи", "ржорзБрж╕рзНрждрж╛ржлрж╛ ржЖрж╣ржорзЗржж", "рж░рзЗрж╣рж╛ржирж╛ ржкрж╛рж░ржнрзАржи",
        "ржЖржмрзНржжрзБрж▓рзНрж▓рж╛рж╣ ржЦрж╛ржи", "ржорж░рж┐ржпрж╝ржо ржмрзЗржЧржо", "рж░ржлрж┐ржХрзБрж▓ ржЗрж╕рж▓рж╛ржо", "рждрж╛ржирж┐ржпрж╝рж╛ ржЖрж╣ржорзЗржж",
        "рж╢рж╛рж╣ржЬрж╛рж╣рж╛ржи ржЖрж▓рзА", "ржирзБрж╕рж░рж╛ржд ржЬрж╛рж╣рж╛ржи", "ржорж╛рж╣ржорзБржжрзБрж░ рж░рж╣ржорж╛ржи", "ржлрж╛рж░ржЬрж╛ржирж╛ ржЖржХрзНрждрж╛рж░"
    ]
    
    # Generate phone numbers
    phone_numbers = []
    for i in range(20):
        # Bangladesh format: +8801XXXXXXXXX
        prefix = random.choice(['71', '72', '73', '74', '75', '76', '77', '78', '79'])
        number = ''.join([str(random.randint(0, 9)) for _ in range(8)])
        phone_numbers.append(f"+8801{prefix}{number}")
    
    # Generate emails
    emails = []
    domains = ['gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com']
    for name in names:
        clean_name = name.replace(' ', '').lower()
        domain = random.choice(domains)
        emails.append(f"{clean_name}@{domain}")
    
    # Create data
    data = [
        ['Name', 'Phone Number', 'Email', 'City']
    ]
    
    cities = ['ржврж╛ржХрж╛', 'ржЪржЯрзНржЯржЧрзНрж░рж╛ржо', 'рж╕рж┐рж▓рзЗржЯ', 'рж░рж╛ржЬрж╢рж╛рж╣рзА', 'ржЦрзБрж▓ржирж╛']
    for i in range(20):
        data.append([
            names[i],
            phone_numbers[i],
            emails[i],
            cities[i % 5]
        ])
    
    # Save to CSV
    with open('sample_phone_numbers.csv', 'w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerows(data)
    
    print("тЬЕ Sample phone numbers CSV file created: sample_phone_numbers.csv")
    print(f"ЁЯУ▒ Total phone numbers: {len(data)-1}")
    
    # Display sample
    print("\nЁЯУЛ Sample data:")
    for row in data[:5]:
        print(row)
    
    return data

if __name__ == "__main__":
    print("ЁЯПе DIGITAL SEBE CHATBOT - Sample Data Generator")
    print("=" * 60)
    
    # Create medicine data
    create_sample_medicine_data()
    print()
    
    # Create phone numbers
    create_sample_phone_numbers()
    print()
    
    print("ЁЯОЙ рж╕ржм sample data рж╕ржлрж▓ржнрж╛ржмрзЗ рждрзИрж░рж┐ рж╣ржпрж╝рзЗржЫрзЗ!")
    print("ЁЯУБ ржлрж╛ржЗрж▓ржЧрзБрж▓рзЛ: medicine_data.csv, sample_phone_numbers.csv")
