#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ЁЯТК ржЙржирзНржиржд ржорзЗржбрж┐рж╕рж┐ржи ржЪрзНржпрж╛ржЯржмржЯ рж░рж╛ржи рж╕рзНржХрзНрж░рж┐ржкрзНржЯ
Improved ржПржмржВ Organized ржнрж╛рж░рзНрж╕ржи ржЪрж╛рж▓рж╛ржирзЛрж░ ржЬржирзНржп
"""

import os
import sys
import subprocess
import platform
from pathlib import Path

def print_banner():
    """ржкрзНрж░рж┐ржирзНржЯ ржмрзНржпрж╛ржирж╛рж░"""
    print("=" * 70)
    print("ЁЯТК ржЙржирзНржиржд ржПржмржВ рж╕ржВржЧржарж┐ржд ржорзЗржбрж┐рж╕рж┐ржи ржЪрзНржпрж╛ржЯржмржЯ")
    print("ЁЯОи Modern UI Design with Better User Experience")
    print("=" * 70)
    print()

def check_requirements():
    """ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ ржкрзНржпрж╛ржХрзЗржЬ ржЪрзЗржХ ржХрж░рзБржи"""
    print("ЁЯУж ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ ржкрзНржпрж╛ржХрзЗржЬ ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...")
    
    required_packages = [
        'streamlit',
        'pandas',
        'scikit-learn',
        'nltk',
        'openpyxl'
    ]
    
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package)
            print(f"тЬЕ {package} ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ")
        except ImportError:
            missing_packages.append(package)
            print(f"тЭМ {package} ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐")
    
    if missing_packages:
        print(f"\nтЭМ ржЕржирзБржкрж╕рзНржерж┐ржд ржкрзНржпрж╛ржХрзЗржЬ: {', '.join(missing_packages)}")
        print("ЁЯТб ржЗржирж╕рзНржЯрж▓ ржХрж░рждрзЗ ржЪрж╛рж▓рж╛ржи: pip install " + " ".join(missing_packages))
        return False
    
    print("тЬЕ рж╕ржм ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ ржкрзНржпрж╛ржХрзЗржЬ ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ")
    return True

def check_excel_file():
    """Excel ржлрж╛ржЗрж▓ ржЪрзЗржХ ржХрж░рзБржи"""
    print("\nЁЯУК Excel ржлрж╛ржЗрж▓ ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...")
    
    excel_file = Path("medicine_data.xlsx")
    if excel_file.exists():
        print(f"тЬЕ {excel_file} ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ")
        return True
    else:
        print(f"тЭМ {excel_file} ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐!")
        print("ЁЯТб ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржкржирж╛рж░ Excel ржлрж╛ржЗрж▓ржЯрж┐ ржкрзНрж░ржЬрзЗржХрзНржЯ ржлрзЛрж▓рзНржбрж╛рж░рзЗ рж░рж╛ржЦрзБржи")
        
        # Create sample data if user wants
        create_sample = input("ЁЯУЭ рж╕рзНржпрж╛ржорзНржкрж▓ Excel ржлрж╛ржЗрж▓ рждрзИрж░рж┐ ржХрж░рждрзЗ ржЪрж╛ржи? (y/n): ").lower().strip()
        if create_sample in ['y', 'yes', 'рж╣рзНржпрж╛ржБ']:
            return create_sample_excel()
        return False

def create_sample_excel():
    """рж╕рзНржпрж╛ржорзНржкрж▓ Excel ржлрж╛ржЗрж▓ рждрзИрж░рж┐ ржХрж░рзБржи"""
    print("\nЁЯУЭ рж╕рзНржпрж╛ржорзНржкрж▓ Excel ржлрж╛ржЗрж▓ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...")
    
    try:
        import pandas as pd
        
        # Sample medicine data with Bengali content
        sample_data = {
            'Medicine Name': [
                'Paracetamol', 'Ibuprofen', 'Omeprazole', 'Cetirizine', 'Metformin',
                'Aspirin', 'Amoxicillin', 'Losartan', 'Atorvastatin', 'Ranitidine'
            ],
            'Generic Name': [
                'Acetaminophen', 'Ibuprofen', 'Omeprazole', 'Cetirizine', 'Metformin',
                'Acetylsalicylic acid', 'Amoxicillin', 'Losartan', 'Atorvastatin', 'Ranitidine'
            ],
            'Uses (ржмрзНржпржмрж╣рж╛рж░)': [
                'ржЬрзНржмрж░, ржмрзНржпржерж╛ ржирж┐рж░рж╛ржоржпрж╝', 'ржмрзНржпржерж╛, ржкрзНрж░ржжрж╛рж╣ ржХржорж╛ржирзЛ', 'ржкрзЗржЯрзЗрж░ ржЖрж▓рж╕рж╛рж░ ржЪрж┐ржХрж┐рзОрж╕рж╛', 
                'ржЕрзНржпрж╛рж▓рж╛рж░рзНржЬрж┐ ржкрзНрж░рждрж┐рж░рзЛржз', 'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'рж╣рж╛рж░рзНржЯ ржЕрзНржпрж╛ржЯрж╛ржХ ржкрзНрж░рждрж┐рж░рзЛржз',
                'ржмрзНржпрж╛ржХржЯрзЗрж░рж┐ржпрж╝рж╛ рж╕ржВржХрзНрж░ржоржг', 'ржЙржЪрзНржЪ рж░ржХрзНрждржЪрж╛ржк', 'ржХрзЛрж▓рзЗрж╕рзНржЯрзЗрж░рж▓ ржХржорж╛ржирзЛ', 'ржкрзЗржЯрзЗрж░ ржЕрзНржпрж╛рж╕рж┐ржб ржХржорж╛ржирзЛ'
            ],
            'Side Effects (ржкрж╛рж░рзНрж╢рзНржмржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛)': [
                'ржмржорж┐, ржорж╛ржерж╛ржмрзНржпржерж╛', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржЧрзНржпрж╛рж╕', 'ржорж╛ржерж╛ржмрзНржпржерж╛, ржЪржХрзНржХрж░', 'ржШрзБржо, ржорзБржЦ рж╢рзБржХрж╛ржирзЛ',
                'ржмржорж┐, ржбрж╛ржпрж╝рж░рж┐ржпрж╝рж╛', 'ржкрзЗржЯ ржЬрзНржмрж╛рж▓рж╛, рж░ржХрзНрждржкрж╛ржд', 'ржбрж╛ржпрж╝рж░рж┐ржпрж╝рж╛, ржЕрзНржпрж╛рж▓рж╛рж░рзНржЬрж┐', 'ржЪржХрзНржХрж░, ржХрж╛рж╢рж┐',
                'ржкрзЗрж╢рзА ржмрзНржпржерж╛, рж▓рж┐ржнрж╛рж░ рж╕ржорж╕рзНржпрж╛', 'ржорж╛ржерж╛ржмрзНржпржерж╛, ржХрзЛрж╖рзНржаржХрж╛ржарж┐ржирзНржп'
            ],
            'Dosage (ржбрзЛржЬ)': [
                '500-1000mg ржкрзНрж░рждрж┐ рзм ржШржгрзНржЯрж╛ржпрж╝', '200-400mg ржкрзНрж░рждрж┐ рзо ржШржгрзНржЯрж╛ржпрж╝', '20mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░',
                '10mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '500mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '75-100mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░',
                '250-500mg ржкрзНрж░рждрж┐ рзо ржШржгрзНржЯрж╛ржпрж╝', '50mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '10-80mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░',
                '150mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░'
            ],
            'Price (рз│)': [5, 8, 15, 12, 20, 3, 25, 18, 35, 10],
            'Company': [
                'Square', 'Beximco', 'Incepta', 'ACI', 'Renata', 'Opsonin', 'Drug International',
                'Healthcare', 'Popular', 'Eskayef'
            ]
        }
        
        df = pd.DataFrame(sample_data)
        df.to_excel('medicine_data.xlsx', index=False)
        print("тЬЕ рж╕рзНржпрж╛ржорзНржкрж▓ Excel ржлрж╛ржЗрж▓ рждрзИрж░рж┐ рж╣ржпрж╝рзЗржЫрзЗ")
        print("ЁЯУК рззрзжржЯрж┐ ржУрж╖рзБржзрзЗрж░ рждржерзНржп ржпрзЛржЧ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ")
        return True
    except Exception as e:
        print(f"тЭМ рж╕рзНржпрж╛ржорзНржкрж▓ ржлрж╛ржЗрж▓ рждрзИрж░рж┐ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛: {e}")
        return False

def run_improved_chatbot():
    """ржЙржирзНржиржд ржЪрзНржпрж╛ржЯржмржЯ ржЪрж╛рж▓рзБ ржХрж░рзБржи"""
    print("\nЁЯЪА ржЙржирзНржиржд ржорзЗржбрж┐рж╕рж┐ржи ржЪрзНржпрж╛ржЯржмржЯ ржЪрж╛рж▓рзБ рж╣ржЪрзНржЫрзЗ...")
    print("ЁЯМР ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ http://localhost:8501 ржП ржпрж╛ржи")
    print("ЁЯОи ржирждрзБржи UI ржПржмржВ ржЙржирзНржиржд ржлрж┐ржЪрж╛рж░ ржЙржкржнрзЛржЧ ржХрж░рзБржи!")
    print("ЁЯЫС ржмржирзНржз ржХрж░рждрзЗ Ctrl+C ржЪрж╛ржкрзБржи")
    print("-" * 70)
    
    try:
        # Use appropriate python command for the platform
        if platform.system() == "Windows":
            subprocess.run(["python", "-m", "streamlit", "run", "improved_medicine_chatbot.py"])
        else:
            subprocess.run(["python3", "-m", "streamlit", "run", "improved_medicine_chatbot.py"])
    except KeyboardInterrupt:
        print("\nЁЯСЛ ржЪрзНржпрж╛ржЯржмржЯ ржмржирзНржз ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ")
    except subprocess.CalledProcessError as e:
        print(f"тЭМ ржЪрзНржпрж╛ржЯржмржЯ ржЪрж╛рж▓рзБ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛: {e}")
        print("ЁЯТб рж╕ржорж╛ржзрж╛ржи: pip install streamlit")
    except FileNotFoundError:
        print("тЭМ Python ржмрж╛ Streamlit ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐")
        print("ЁЯТб Python ржПржмржВ Streamlit ржЗржирж╕рзНржЯрж▓ ржХрж░рзБржи")

def show_features():
    """ржирждрзБржи ржлрж┐ржЪрж╛рж░рзЗрж░ рждрж╛рж▓рж┐ржХрж╛ ржжрзЗржЦрж╛ржи"""
    print("\nЁЯОп ржирждрзБржи ржлрж┐ржЪрж╛рж░рж╕ржорзВрж╣:")
    print("=" * 50)
    print("ЁЯОи Modern ржПржмржВ Responsive UI Design")
    print("ЁЯзн Improved Navigation System")
    print("ЁЯУ▒ Mobile-Friendly Interface")
    print("ЁЯФН Enhanced Search Functionality")
    print("ЁЯУК Better Data Visualization")
    print("ЁЯУБ Organized File Upload System")
    print("ЁЯТл Smooth Animations ржПржмржВ Transitions")
    print("ЁЯОн Professional Color Scheme")
    print("ЁЯУЦ Built-in Help ржПржмржВ FAQ")
    print("тЪб Quick Access Features")
    print("=" * 50)

def main():
    """ржорзЗржЗржи ржлрж╛ржВрж╢ржи"""
    print_banner()
    show_features()
    
    # Check requirements
    if not check_requirements():
        input("\nEnter ржЪрж╛ржкрзБржи ржмржирзНржз ржХрж░рждрзЗ...")
        return
    
    # Check Excel file
    if not check_excel_file():
        input("\nEnter ржЪрж╛ржкрзБржи ржмржирзНржз ржХрж░рждрзЗ...")
        return
    
    # Show final message before starting
    print("\nЁЯОЙ рж╕ржмржХрж┐ржЫрзБ ржкрзНрж░рж╕рзНрждрзБржд! ржЙржирзНржиржд ржЪрзНржпрж╛ржЯржмржЯ ржЪрж╛рж▓рзБ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...")
    print("ЁЯТб ржЯрж┐ржкрж╕: рж╕рж╛ржЗржбржмрж╛рж░ ржерзЗржХрзЗ ржмрж┐ржнрж┐ржирзНржи ржкрзЗржЬ ржПржХрзНрж╕ржкрзНрж▓рзЛрж░ ржХрж░рзБржи")
    
    # Run the improved chatbot
    run_improved_chatbot()

if __name__ == "__main__":
    main()
