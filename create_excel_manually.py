#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ЁЯУК Manual Excel File Creator
ржмрж╛рж╣рзНржпрж┐ржХ dependencies ржЫрж╛ржбрж╝рж╛ржЗ Excel ржлрж╛ржЗрж▓ рждрзИрж░рж┐ ржХрж░рзЗ
"""

import csv

def create_excel_like_csv():
    """Excel ржПрж░ ржоржд рж╕рзБржирзНржжрж░ CSV ржлрж╛ржЗрж▓ рждрзИрж░рж┐ ржХрж░рзЗ"""
    
    # Medicine data with better formatting
    medicine_data = [
        ['Medicine Name', 'Bengali Name', 'Category', 'Uses', 'Side Effects', 'Dosage', 'Price (BDT)', 'Availability'],
        ['Paracetamol', 'ржкрзНржпрж╛рж░рж╛рж╕рж┐ржЯрж╛ржорж▓', 'Pain Relief', 'ржЬрзНржмрж░ ржУ ржмрзНржпржерж╛ ржХржорж╛ржпрж╝', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '500-1000mg 4-6 ржШржгрзНржЯрж╛ ржкрж░', '2.50', 'Available'],
        ['Ibuprofen', 'ржЖржЗржмрзБржкрзНрж░рзЛржлрзЗржи', 'Pain Relief', 'ржмрзНржпржерж╛ ржУ ржкрзНрж░ржжрж╛рж╣ ржХржорж╛ржпрж╝', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржорж╛ржерж╛ ржмрзНржпржерж╛', '200-400mg 4-6 ржШржгрзНржЯрж╛ ржкрж░', '5.00', 'Available'],
        ['Omeprazole', 'ржУржорзЗржкрзНрж░рж╛ржЬрзЛрж▓', 'Gastric', 'ржЧрзНржпрж╛рж╕рзНржЯрзНрж░рж┐ржХ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '20mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '8.00', 'Available'],
        ['Metformin', 'ржорзЗржЯржлрж░ржорж┐ржи', 'Diabetes', 'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'ржмржорж┐ ржмржорж┐ ржнрж╛ржм, ржбрж╛ржпрж╝рж░рж┐ржпрж╝рж╛', '500mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '3.50', 'Available'],
        ['Amlodipine', 'ржЕрзНржпрж╛ржорж▓рзЛржбрж┐ржкрж╛ржЗржи', 'Blood Pressure', 'ржЙржЪрзНржЪ рж░ржХрзНрждржЪрж╛ржк ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржлрзБрж▓рзЗ ржпрж╛ржУржпрж╝рж╛', '5-10mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '6.00', 'Available'],
        ['Atorvastatin', 'ржЕрзНржпрж╛ржЯрж░ржнрж╛рж╕рзНржЯрзНржпрж╛ржЯрж┐ржи', 'Cholesterol', 'ржХрзЛрж▓рзЗрж╕рзНржЯрзЗрж░рж▓ ржХржорж╛ржпрж╝', 'ржорж╛ржВрж╕ржкрзЗрж╢рж┐рждрзЗ ржмрзНржпржерж╛, ржкрзЗржЯрзЗ ржмрзНржпржерж╛', '10-20mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '12.00', 'Available'],
        ['Cetirizine', 'рж╕рж┐ржЯрж┐рж░рж┐ржЬрж┐ржи', 'Allergy', 'ржЕрзНржпрж╛рж▓рж╛рж░рзНржЬрж┐ ржкрзНрж░рждрж┐рж░рзЛржз', 'ржШрзБржо ржШрзБржо ржнрж╛ржм, рж╢рзБрж╖рзНржХ ржорзБржЦ', '10mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '4.00', 'Available'],
        ['Ranitidine', 'рж░рж╛ржирж┐ржЯрж┐ржбрж┐ржи', 'Gastric', 'ржЧрзНржпрж╛рж╕рзНржЯрзНрж░рж┐ржХ ржЕрзНржпрж╛рж╕рж┐ржб ржХржорж╛ржпрж╝', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '150mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '3.00', 'Available'],
        ['Diclofenac', 'ржбрж┐ржХрзНрж▓рзЛржлрзЗржирж╛ржХ', 'Pain Relief', 'ржмрзНржпржерж╛ ржУ ржкрзНрж░ржжрж╛рж╣ ржХржорж╛ржпрж╝', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '50mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '7.00', 'Available'],
        ['Aspirin', 'ржЕрзНржпрж╛рж╕ржкрж┐рж░рж┐ржи', 'Pain Relief', 'ржмрзНржпржерж╛ ржХржорж╛ржпрж╝ ржУ рж░ржХрзНржд ржкрж╛рждрж▓рж╛ ржХрж░рзЗ', 'ржкрзЗржЯрзЗ ржмрзНржпржерж╛, рж░ржХрзНрждржХрзНрж╖рж░ржг', '75-150mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '1.50', 'Available'],
        ['Loratadine', 'рж▓рзЛрж░рж╛ржЯрж╛ржбрж┐ржи', 'Allergy', 'ржЕрзНржпрж╛рж▓рж╛рж░рзНржЬрж┐ ржкрзНрж░рждрж┐рж░рзЛржз', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, рж╢рзБрж╖рзНржХ ржорзБржЦ', '10mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '4.00', 'Available'],
        ['Pantoprazole', 'ржкрзНржпрж╛ржирзНржЯрзЛржкрзНрж░рж╛ржЬрзЛрж▓', 'Gastric', 'ржЧрзНржпрж╛рж╕рзНржЯрзНрж░рж┐ржХ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '40mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '10.00', 'Available'],
        ['Simvastatin', 'рж╕рж┐ржоржнрж╛рж╕рзНржЯрзНржпрж╛ржЯрж┐ржи', 'Cholesterol', 'ржХрзЛрж▓рзЗрж╕рзНржЯрзЗрж░рж▓ ржХржорж╛ржпрж╝', 'ржорж╛ржВрж╕ржкрзЗрж╢рж┐рждрзЗ ржмрзНржпржерж╛, ржкрзЗржЯрзЗ ржмрзНржпржерж╛', '20-40mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '15.00', 'Available'],
        ['Losartan', 'рж▓рзЛрж╕рж╛рж░рзНржЯрж╛ржи', 'Blood Pressure', 'ржЙржЪрзНржЪ рж░ржХрзНрждржЪрж╛ржк ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'ржорж╛ржерж╛ ржмрзНржпржерж╛, ржлрзБрж▓рзЗ ржпрж╛ржУржпрж╝рж╛', '50mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '8.00', 'Available'],
        ['Glimepiride', 'ржЧрзНрж▓рж┐ржорзЗржкрж┐рж░рж╛ржЗржб', 'Diabetes', 'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'рж░ржХрзНрждрзЗ рж╢рж░рзНржХрж░рж╛ ржХржорзЗ ржпрж╛ржУржпрж╝рж╛, ржорж╛ржерж╛ ржШрзЛрж░рж╛', '1-2mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '5.00', 'Available'],
        ['Gliclazide', 'ржЧрзНрж▓рж┐ржХрзНрж▓рж╛ржЬрж╛ржЗржб', 'Diabetes', 'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'рж░ржХрзНрждрзЗ рж╢рж░рзНржХрж░рж╛ ржХржорзЗ ржпрж╛ржУржпрж╝рж╛, ржорж╛ржерж╛ ржШрзЛрж░рж╛', '80mg ржжрж┐ржирзЗ ржжрзБржЗржмрж╛рж░', '4.50', 'Available'],
        ['Insulin', 'ржЗржирж╕рзБрж▓рж┐ржи', 'Diabetes', 'ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг', 'рж░ржХрзНрждрзЗ рж╢рж░рзНржХрж░рж╛ ржХржорзЗ ржпрж╛ржУржпрж╝рж╛, ржУржЬржи ржмрж╛ржбрж╝рж╛', 'ржЗржиржЬрзЗржХрж╢ржи', '150.00', 'Available'],
        ['Warfarin', 'ржУржпрж╝рж╛рж░ржлрж╛рж░рж┐ржи', 'Blood Thinner', 'рж░ржХрзНржд ржЬржорж╛ржЯ ржмрж╛ржБржзрж╛ ржкрзНрж░рждрж┐рж░рзЛржз', 'рж░ржХрзНрждржХрзНрж╖рж░ржг, ржмржорж┐ ржмржорж┐ ржнрж╛ржм', '5mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '2.00', 'Available'],
        ['Furosemide', 'ржлрзБрж░рзЛрж╕рзЗржорж╛ржЗржб', 'Diuretic', 'ржорзВрждрзНрж░ржмрж░рзНржзржХ', 'ржорзВрждрзНрж░рждрзНржпрж╛ржЧ ржмрзЗржбрж╝рзЗ ржпрж╛ржУржпрж╝рж╛, рж░ржХрзНрждржЪрж╛ржк ржХржорзЗ ржпрж╛ржУржпрж╝рж╛', '40mg ржжрж┐ржирзЗ ржПржХржмрж╛рж░', '3.50', 'Available']
    ]
    
    # Save to CSV with better formatting
    with open('medicine_data.xlsx', 'w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerows(medicine_data)
    
    print("тЬЕ Enhanced medicine data saved to: medicine_data.xlsx")
    print(f"ЁЯТК Total medicines: {len(medicine_data)-1}")
    
    # Display categories
    categories = set()
    for row in medicine_data[1:]:
        categories.add(row[2])
    
    print(f"\nЁЯПе Medicine categories: {len(categories)}")
    print("Categories:", ', '.join(sorted(categories)))
    
    return medicine_data

def create_enhanced_phone_numbers():
    """Enhanced ржлрзЛржи ржиржорзНржмрж░ рждрж╛рж▓рж┐ржХрж╛ рждрзИрж░рж┐ ржХрж░рзЗ"""
    
    # Sample names with more variety
    names = [
        "ржЖрж╣ржорзЗржж ржЖрж▓рзА", "ржлрж╛рждрзЗржорж╛ ржмрзЗржЧржо", "ржорзЛрж╣рж╛ржорзНржоржж рж░рж╣ржорж╛ржи", "ржЖржпрж╝рзЗрж╢рж╛ ржЦрж╛рждрзБржи",
        "ржЖржмрзНржжрзБрж▓ ржХрж░рж┐ржо", "рж░рж╛рж╣рзЗрж▓рж╛ рж╕рзБрж▓рждрж╛ржирж╛", "рж╣рж╛рж╕рж╛ржи ржорж╛рж╣ржорзБржж", "ржирж╛ржЬржорж╛ ржЖржХрзНрждрж╛рж░",
        "ржЗржмрзНрж░рж╛рж╣рж┐ржо рж╣рзЛрж╕рзЗржи", "рж╕рж╛ржмрж░рж┐ржирж╛ ржЗржпрж╝рж╛рж╕ржорж┐ржи", "ржорзБрж╕рзНрждрж╛ржлрж╛ ржЖрж╣ржорзЗржж", "рж░рзЗрж╣рж╛ржирж╛ ржкрж╛рж░ржнрзАржи",
        "ржЖржмрзНржжрзБрж▓рзНрж▓рж╛рж╣ ржЦрж╛ржи", "ржорж░рж┐ржпрж╝ржо ржмрзЗржЧржо", "рж░ржлрж┐ржХрзБрж▓ ржЗрж╕рж▓рж╛ржо", "рждрж╛ржирж┐ржпрж╝рж╛ ржЖрж╣ржорзЗржж",
        "рж╢рж╛рж╣ржЬрж╛рж╣рж╛ржи ржЖрж▓рзА", "ржирзБрж╕рж░рж╛ржд ржЬрж╛рж╣рж╛ржи", "ржорж╛рж╣ржорзБржжрзБрж░ рж░рж╣ржорж╛ржи", "ржлрж╛рж░ржЬрж╛ржирж╛ ржЖржХрзНрждрж╛рж░",
        "рж░рж╛рж╢рзЗржж ржЖрж╣ржорзЗржж", "ржирж╛ржЬржирзАржи ржЖржХрзНрждрж╛рж░", "рж╢ржлрж┐ржХрзБрж▓ ржЗрж╕рж▓рж╛ржо", "рж╕рж╛ржмрж░рж┐ржирж╛ рж╕рзБрж▓рждрж╛ржирж╛",
        "ржЖржмрзНржжрзБрж▓ ржорж╛рж▓рзЗржХ", "рж░рзЗрж╣рж╛ржирж╛ ржмрзЗржЧржо", "ржорж╛рж╣ржорзБржж ржЖрж▓рзА", "ржлрж╛рждрзЗржорж╛ ржЦрж╛рждрзБржи",
        "ржЗржмрзНрж░рж╛рж╣рж┐ржо ржЦрж╛ржи", "ржирж╛ржЬржорж╛ рж╕рзБрж▓рждрж╛ржирж╛", "рж╣рж╛рж╕рж╛ржи ржЖрж╣ржорзЗржж", "ржЖржпрж╝рзЗрж╢рж╛ ржмрзЗржЧржо"
    ]
    
    # Generate phone numbers
    phone_numbers = []
    for i in range(30):
        # Bangladesh format: +8801XXXXXXXXX
        prefix = random.choice(['71', '72', '73', '74', '75', '76', '77', '78', '79'])
        number = ''.join([str(random.randint(0, 9)) for _ in range(8)])
        phone_numbers.append(f"+8801{prefix}{number}")
    
    # Generate emails
    emails = []
    domains = ['gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com', 'yahoo.co.uk']
    for name in names:
        clean_name = name.replace(' ', '').lower()
        domain = random.choice(domains)
        emails.append(f"{clean_name}@{domain}")
    
    # Create data
    data = [
        ['Name', 'Phone Number', 'Email', 'City', 'Profession']
    ]
    
    cities = ['ржврж╛ржХрж╛', 'ржЪржЯрзНржЯржЧрзНрж░рж╛ржо', 'рж╕рж┐рж▓рзЗржЯ', 'рж░рж╛ржЬрж╢рж╛рж╣рзА', 'ржЦрзБрж▓ржирж╛', 'ржмрж░рж┐рж╢рж╛рж▓', 'рж░ржВржкрзБрж░', 'ржоржпрж╝ржоржирж╕рж┐ржВрж╣']
    professions = ['ржбрж╛ржХрзНрждрж╛рж░', 'ржЗржЮрзНржЬрж┐ржирж┐ржпрж╝рж╛рж░', 'рж╢рж┐ржХрзНрж╖ржХ', 'ржмрзНржпржмрж╕рж╛ржпрж╝рзА', 'ржХрж░рзНржоржЪрж╛рж░рзА', 'ржЫрж╛рждрзНрж░', 'ржЧрзГрж╣рж┐ржгрзА', 'ржЪрж╛ржХрж░рж┐ржЬрзАржмрзА']
    
    for i in range(30):
        data.append([
            names[i],
            phone_numbers[i],
            emails[i],
            cities[i % len(cities)],
            professions[i % len(professions)]
        ])
    
    # Save to CSV
    with open('sample_phone_numbers.xlsx', 'w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerows(data)
    
    print("тЬЕ Enhanced phone numbers saved to: sample_phone_numbers.xlsx")
    print(f"ЁЯУ▒ Total phone numbers: {len(data)-1}")
    
    return data

if __name__ == "__main__":
    import random
    
    print("ЁЯПе DIGITAL SEBE CHATBOT - Enhanced Data Generator")
    print("=" * 60)
    
    # Create enhanced medicine data
    create_excel_like_csv()
    print()
    
    # Create enhanced phone numbers
    create_enhanced_phone_numbers()
    print()
    
    print("ЁЯОЙ рж╕ржм enhanced data рж╕ржлрж▓ржнрж╛ржмрзЗ рждрзИрж░рж┐ рж╣ржпрж╝рзЗржЫрзЗ!")
    print("ЁЯУБ ржлрж╛ржЗрж▓ржЧрзБрж▓рзЛ: medicine_data.xlsx, sample_phone_numbers.xlsx")
    print("\nЁЯТб ржПржЗ ржлрж╛ржЗрж▓ржЧрзБрж▓рзЛ ржЖржкржирж╛рж░ chatbot ржП ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи!")
